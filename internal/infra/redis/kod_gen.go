// Code generated by "kod generate". DO NOT EDIT.
//go:build !ignoreKodGen

package redis

import (
	"context"
	"github.com/go-kod/kod"
	"github.com/go-kod/kod/interceptor"
	"reflect"
)

// Full method names for components.
const (
	// SnowflakeRepository is the full name of the component [github.com/go-kod/kod-mono/internal/infra/redis/SnowflakeRepository].
	SnowflakeRepository_ComponentName = "github.com/go-kod/kod-mono/internal/infra/redis/SnowflakeRepository"
	// SnowflakeRepository_GetUniqId_FullMethodName is the full name of the method [snowflake.GetUniqId].
	SnowflakeRepository_GetUniqId_FullMethodName = "github.com/go-kod/kod-mono/internal/infra/redis/SnowflakeRepository.GetUniqId"
)

func init() {
	kod.Register(&kod.Registration{
		Name:      "github.com/go-kod/kod-mono/internal/infra/redis/SnowflakeRepository",
		Interface: reflect.TypeOf((*SnowflakeRepository)(nil)).Elem(),
		Impl:      reflect.TypeOf(snowflake{}),
		Refs:      ``,
		LocalStubFn: func(ctx context.Context, info *kod.LocalStubFnInfo) any {
			return snowflakeRepository_local_stub{
				impl:        info.Impl.(SnowflakeRepository),
				interceptor: info.Interceptor,
			}
		},
	})
}

// CodeGen version check.
var _ kod.CodeGenLatestVersion = kod.CodeGenVersion[[0][1]struct{}](`
ERROR: You generated this file with 'kod generate' (codegen
version v0.1.0). The generated code is incompatible with the version of the
github.com/go-kod/kod module that you're using. The kod module
version can be found in your go.mod file or by running the following command.

    go list -m github.com/go-kod/kod

We recommend updating the kod module and the 'kod generate' command by
running the following.

    go get github.com/go-kod/kod@latest
    go install github.com/go-kod/kod/cmd/kod@latest

Then, re-run 'kod generate' and re-build your code. If the problem persists,
please file an issue at https://github.com/go-kod/kod/issues.
`)

// kod.InstanceOf checks.
var _ kod.InstanceOf[SnowflakeRepository] = (*snowflake)(nil)

// Local stub implementations.
// snowflakeRepository_local_stub is a local stub implementation of [SnowflakeRepository].
type snowflakeRepository_local_stub struct {
	impl        SnowflakeRepository
	interceptor interceptor.Interceptor
}

// Check that [snowflakeRepository_local_stub] implements the [SnowflakeRepository] interface.
var _ SnowflakeRepository = (*snowflakeRepository_local_stub)(nil)

// GetUniqId wraps the method [snowflake.GetUniqId].
func (s snowflakeRepository_local_stub) GetUniqId(ctx context.Context) (r0 int64, err error) {

	if s.interceptor == nil {
		r0, err = s.impl.GetUniqId(ctx)
		return
	}

	call := func(ctx context.Context, info interceptor.CallInfo, req, res []any) (err error) {
		r0, err = s.impl.GetUniqId(ctx)
		res[0] = r0
		return
	}

	info := interceptor.CallInfo{
		Impl:       s.impl,
		FullMethod: SnowflakeRepository_GetUniqId_FullMethodName,
	}

	err = s.interceptor(ctx, info, []any{}, []any{r0}, call)
	return
}

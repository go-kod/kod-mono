// Code generated by "kod generate"; DO NOT EDIT.

package server

import (
	"context"

	kgin "github.com/go-kod/kod-ext/server/kgin"
	"github.com/go-kod/kod-mono/api/graph"
	snowflakev1 "github.com/go-kod/kod-mono/api/grpc/gen/go/snowflake/v1"
)

// GinController is implemented by [ginImpl],
// which can be mocked with [NewMockGinController].
type GinController interface {
	// UniqueID is implemented by [ginImpl.UniqueID]
	//
	//	@Summary		Get a Unique ID
	//	@Description	get unique ID
	//	@Consume		x-www-form-urlencoded
	//	@Produce		json
	//	@Param			request	query		example.TestReq	true	"请求参数"
	//	@Success		200		{object}	example.TestRes	"ok"
	//	@Router			/uniqueId [get]
	UniqueID(ctx *kgin.Context)
}

// GraphController is implemented by [resolver],
// which can be mocked with [NewMockGraphController].
type GraphController interface {
	// Query is implemented by [resolver.Query]
	Query() graph.QueryResolver
	// Mutation is implemented by [resolver.Mutation]
	Mutation() graph.MutationResolver
}

// GrpcController is implemented by [grpcImpl],
// which can be mocked with [NewMockGrpcController].
type GrpcController interface {
	// UniqueId is implemented by [grpcImpl.UniqueId]
	UniqueId(ctx context.Context, req *snowflakev1.UniqueIdRequest) (*snowflakev1.UniqueIdResponse, error)
}
